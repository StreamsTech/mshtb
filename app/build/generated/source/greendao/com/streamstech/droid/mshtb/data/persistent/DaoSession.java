package com.streamstech.droid.mshtb.data.persistent;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.streamstech.droid.mshtb.data.persistent.Patient;
import com.streamstech.droid.mshtb.data.persistent.Screening;
import com.streamstech.droid.mshtb.data.persistent.Settings;
import com.streamstech.droid.mshtb.data.persistent.TestIndication;
import com.streamstech.droid.mshtb.data.persistent.TestResultHistopathology;
import com.streamstech.droid.mshtb.data.persistent.TestResultSmear;
import com.streamstech.droid.mshtb.data.persistent.TestResultXPert;
import com.streamstech.droid.mshtb.data.persistent.TestResultXRay;
import com.streamstech.droid.mshtb.data.persistent.User;

import com.streamstech.droid.mshtb.data.persistent.PatientDao;
import com.streamstech.droid.mshtb.data.persistent.ScreeningDao;
import com.streamstech.droid.mshtb.data.persistent.SettingsDao;
import com.streamstech.droid.mshtb.data.persistent.TestIndicationDao;
import com.streamstech.droid.mshtb.data.persistent.TestResultHistopathologyDao;
import com.streamstech.droid.mshtb.data.persistent.TestResultSmearDao;
import com.streamstech.droid.mshtb.data.persistent.TestResultXPertDao;
import com.streamstech.droid.mshtb.data.persistent.TestResultXRayDao;
import com.streamstech.droid.mshtb.data.persistent.UserDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig patientDaoConfig;
    private final DaoConfig screeningDaoConfig;
    private final DaoConfig settingsDaoConfig;
    private final DaoConfig testIndicationDaoConfig;
    private final DaoConfig testResultHistopathologyDaoConfig;
    private final DaoConfig testResultSmearDaoConfig;
    private final DaoConfig testResultXPertDaoConfig;
    private final DaoConfig testResultXRayDaoConfig;
    private final DaoConfig userDaoConfig;

    private final PatientDao patientDao;
    private final ScreeningDao screeningDao;
    private final SettingsDao settingsDao;
    private final TestIndicationDao testIndicationDao;
    private final TestResultHistopathologyDao testResultHistopathologyDao;
    private final TestResultSmearDao testResultSmearDao;
    private final TestResultXPertDao testResultXPertDao;
    private final TestResultXRayDao testResultXRayDao;
    private final UserDao userDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        patientDaoConfig = daoConfigMap.get(PatientDao.class).clone();
        patientDaoConfig.initIdentityScope(type);

        screeningDaoConfig = daoConfigMap.get(ScreeningDao.class).clone();
        screeningDaoConfig.initIdentityScope(type);

        settingsDaoConfig = daoConfigMap.get(SettingsDao.class).clone();
        settingsDaoConfig.initIdentityScope(type);

        testIndicationDaoConfig = daoConfigMap.get(TestIndicationDao.class).clone();
        testIndicationDaoConfig.initIdentityScope(type);

        testResultHistopathologyDaoConfig = daoConfigMap.get(TestResultHistopathologyDao.class).clone();
        testResultHistopathologyDaoConfig.initIdentityScope(type);

        testResultSmearDaoConfig = daoConfigMap.get(TestResultSmearDao.class).clone();
        testResultSmearDaoConfig.initIdentityScope(type);

        testResultXPertDaoConfig = daoConfigMap.get(TestResultXPertDao.class).clone();
        testResultXPertDaoConfig.initIdentityScope(type);

        testResultXRayDaoConfig = daoConfigMap.get(TestResultXRayDao.class).clone();
        testResultXRayDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        patientDao = new PatientDao(patientDaoConfig, this);
        screeningDao = new ScreeningDao(screeningDaoConfig, this);
        settingsDao = new SettingsDao(settingsDaoConfig, this);
        testIndicationDao = new TestIndicationDao(testIndicationDaoConfig, this);
        testResultHistopathologyDao = new TestResultHistopathologyDao(testResultHistopathologyDaoConfig, this);
        testResultSmearDao = new TestResultSmearDao(testResultSmearDaoConfig, this);
        testResultXPertDao = new TestResultXPertDao(testResultXPertDaoConfig, this);
        testResultXRayDao = new TestResultXRayDao(testResultXRayDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);

        registerDao(Patient.class, patientDao);
        registerDao(Screening.class, screeningDao);
        registerDao(Settings.class, settingsDao);
        registerDao(TestIndication.class, testIndicationDao);
        registerDao(TestResultHistopathology.class, testResultHistopathologyDao);
        registerDao(TestResultSmear.class, testResultSmearDao);
        registerDao(TestResultXPert.class, testResultXPertDao);
        registerDao(TestResultXRay.class, testResultXRayDao);
        registerDao(User.class, userDao);
    }
    
    public void clear() {
        patientDaoConfig.clearIdentityScope();
        screeningDaoConfig.clearIdentityScope();
        settingsDaoConfig.clearIdentityScope();
        testIndicationDaoConfig.clearIdentityScope();
        testResultHistopathologyDaoConfig.clearIdentityScope();
        testResultSmearDaoConfig.clearIdentityScope();
        testResultXPertDaoConfig.clearIdentityScope();
        testResultXRayDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
    }

    public PatientDao getPatientDao() {
        return patientDao;
    }

    public ScreeningDao getScreeningDao() {
        return screeningDao;
    }

    public SettingsDao getSettingsDao() {
        return settingsDao;
    }

    public TestIndicationDao getTestIndicationDao() {
        return testIndicationDao;
    }

    public TestResultHistopathologyDao getTestResultHistopathologyDao() {
        return testResultHistopathologyDao;
    }

    public TestResultSmearDao getTestResultSmearDao() {
        return testResultSmearDao;
    }

    public TestResultXPertDao getTestResultXPertDao() {
        return testResultXPertDao;
    }

    public TestResultXRayDao getTestResultXRayDao() {
        return testResultXRayDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

}
